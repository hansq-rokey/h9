<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ibaixiong.mall.dao.UserDao">
	<resultMap id="BaseResultMap" type="com.ibaixiong.entity.User">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="avatar_img" property="avatarImg" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="CHAR" />
		<result column="points" property="points" jdbcType="INTEGER" />
		<result column="create_date_time" property="createDateTime"
			jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="TINYINT" />
		<result column="salt" property="salt" jdbcType="CHAR" />
		<result column="available" property="available" jdbcType="TINYINT" />
		<result column="block_time" property="blockTime" jdbcType="TIMESTAMP" />
		<result column="block_memo" property="blockMemo" jdbcType="VARCHAR" />
		<result column="grade_id" property="gradeId" jdbcType="INTEGER" />
		<result column="exp_num" property="expNum" jdbcType="INTEGER" />
		<result column="bx_num" property="bxNum" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="TINYINT" />
	</resultMap>
	<sql id="Base_Column_List">
		id,
		user_name,
		user_pwd,
		nick_name,
		avatar_img,
		email,
		phone,
		points,
		create_date_time,
		update_time,
		status,salt,
		available,
		block_time,
		block_memo,
		grade_id,
		bx_num,
		exp_num,
		type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from tbl_user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByUserName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tbl_user
		where user_name = #{userName,jdbcType=VARCHAR}
	</select>
	<select id="queryRoleNames" resultType="String">
  	SELECT 
  		r.name 
  	FROM 
  		tbl_bbs_role r 
  	LEFT JOIN  
  		tbl_bbs_user_role  ur ON ur.role_id=r.id 
  	WHERE  
  		ur.user_id=#{userId,jdbcType=BIGINT} 
  
    </select>
	<select id="selectByUserNameOrBxNum" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tbl_user
		where user_name = #{userName,jdbcType=VARCHAR} or 
		bx_num = #{userName,jdbcType=VARCHAR}
	</select>
	<select id="selectByPhone" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tbl_user
		where phone = #{phone,jdbcType=CHAR}
	</select>
	<select id="selectByEmail" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tbl_user
		where email = #{email,jdbcType=VARCHAR}
	</select>
	<select id="selectUserCountByPhone" parameterType="java.lang.String"
		resultType="int">
		select
		count(1)
		from
		tbl_user
		where user_name =
		#{userName,jdbcType=VARCHAR} or
		phone=#{phone,jdbcType=VARCHAR}
	</select>
	
	<select id="queryRoles" resultType="String">
  	SELECT 
  		r.roleTag 
  	FROM 
  		tbl_bbs_role r 
  	LEFT JOIN  
  		tbl_bbs_user_role  ur ON ur.role_id=r.id 
  	WHERE  
  		ur.user_id=#{userId,jdbcType=BIGINT} 
  
  </select>
  
  <select id="queryPermissions" resultType="String">
  	SELECT 
  		DISTINCT p.per_oper 
  	FROM 
  		tbl_bbs_permissions p 
  	LEFT JOIN 
  		tbl_bbs_role_permissions  rp on p.id=rp.permission_id 
  	LEFT JOIN 
  		tbl_bbs_user_role ur ON rp.role_id=ur.role_id 
  	WHERE 
  		ur.user_id=#{userId,jdbcType=BIGINT} 
  
  </select>
  
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		tbl_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.ibaixiong.entity.User"
		useGeneratedKeys="true" keyProperty="id">
		insert into tbl_user (id,
		user_name, user_pwd,
		nick_name, avatar_img, email,
		phone, points,
		create_date_time,
		update_time, status, salt,
		available,
		block_time,
		block_memo,
		grade_id,bx_num, exp_num, type)
		values
		(#{id,jdbcType=INTEGER},
		#{userName,jdbcType=VARCHAR},
		#{userPwd,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{avatarImg,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{phone,jdbcType=CHAR},
		#{points,jdbcType=INTEGER},
		#{createDateTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=TINYINT},
		#{salt,jdbcType=CHAR},
		#{available,jdbcType=TINYINT},
		#{blockTime,jdbcType=TIMESTAMP},
		#{blockMemo,jdbcType=VARCHAR},
		#{gradeId,jdbcType=INTEGER},
		#{bxNum,jdbcType=VARCHAR},
		#{expNum,jdbcType=INTEGER},
		#{type,jdbcType=TINYINT})
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ibaixiong.entity.User">
		update tbl_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null">
				user_pwd = #{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				nick_name = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="avatarImg != null">
				avatar_img = #{avatarImg,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=CHAR},
			</if>
			<if test="points != null">
				points = #{points,jdbcType=INTEGER},
			</if>
			<if test="createDateTime != null">
				create_date_time = #{createDateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=TINYINT},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=CHAR},
			</if>
			<if test="available != null">
				available = #{available,jdbcType=TINYINT},
			</if>
			<if test="blockTime != null">
				block_time = #{blockTime,jdbcType=TIMESTAMP},
			</if>
			<if test="blockMemo != null">
				block_memo = #{blockMemo,jdbcType=VARCHAR},
			</if>
			<if test="gradeId != null">
				grade_id = #{gradeId,jdbcType=INTEGER},
			</if>
			<if test="bxNum != null">
				bx_num = #{bxNum,jdbcType=VARCHAR},
			</if>
			<if test="expNum != null">
				exp_num = #{expNum,jdbcType=INTEGER},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=TINYINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateBxNum">
		update tbl_user
		set bx_num = #{bxNum,jdbcType=VARCHAR}
		where id = #{userId,jdbcType=BIGINT}
	</update>

	<update id="updatePasswordByUserName">
		update tbl_user
		set user_pwd =
		#{password,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=CHAR}
		where
		user_name =
		#{userName,jdbcType=VARCHAR}
	</update>
</mapper>
